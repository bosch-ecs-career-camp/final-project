name: Image-Build&Push-Workflow

on:
  workflow_dispatch:

env:
  RUNNER_VERSION: 2.294.1
  ACR_NAME: stream4bosch
  R_GROUP: final-project

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # checkout the repo
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v3.0.2

      - name: "Login via Azure CLI"
        uses: azure/login@v1.4.5
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: "create azure container registry"  
        run: |
         acrLength=`az acr list --query "[?name=='${{ env.ACR_NAME }}']"`
         [[ ${#acrLength} -gt 3 ]] && echo "acr ${{ env.ACR_NAME }} exist" || \
         az acr create --resource-group ${{ env.R_GROUP }} \
         --name ${{ env.ACR_NAME }} --sku Basic \
         --admin-enabled true

      # - name: Azure CLI script file
      #   uses: azure/CLI@v1
      #   with:
      #     azcliversion: 2.46.0
      #     inlineScript: |
      #       chmod +x $GITHUB_WORKSPACE/scripts/acr_create.sh
      #       $GITHUB_WORKSPACE/scripts/acr_create.sh

      - name: "Build GitHub Runner container image"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ env.ACR_NAME }}
          password: ${{ secrets.REG_PASS }}
      - run: |
          docker build --build-arg RUNNER_VERSION=${{ env.RUNNER_VERSION }} -t ${{ env.ACR_NAME }}.azurecr.io/final-project:${{ env.RUNNER_VERSION }} .      
          docker push ${{ env.ACR_NAME }}.azurecr.io/final-project:${{ env.RUNNER_VERSION }}


      